pipeline:
  shifts:
    - label: score_nhlapi
      task_type: source
      task_name: load_score_source
      emplace: {}
    - label: extract_games
      task_type: transform
      task_name: unnest_games_and_get_url
      emplace: {}
    - label: load_shifts
      task_type: request
      task_name: fetch_shiftcharts
      emplace:
        input: NHL_GAMES
    - label: process_shifts
      task_type: transform
      task_name: process_shifts
      emplace:
        input: RAW_SHIFTCHARTS
    - label: save_shifts_to_clickhouse
      task_type: sink
      task_name: to_clickhouse
      emplace:
        to_save: NHL_SHIFTS
        model: shifts
        table: shifts

  plays_events:
    - label: score_nhlapi
      task_type: source
      task_name: load_score_source
      emplace: {}
    - label: extract_games
      task_type: transform
      task_name: unnest_games_and_get_url
      emplace: {}
    - label: load_plays
      task_type: request
      task_name: fetch_play_by_play
      emplace: 
        input: NHL_GAMES
    - label: process_roster
      task_type: transform
      task_name: process_plays
      emplace: 
        input: RAW_PLAY_BY_PLAY
    - label: process_events_from_plays
      task_type: transform
      task_name: process_events_from_plays
      emplace: 
        input: NHL_PLAYS
    - label: save_plays_to_clickhouse
      task_type: sink
      task_name: to_clickhouse
      emplace:
        to_save: NHL_PLAYS
        model: plays
        table: plays
    - label: save_events_to_clickhouse
      task_type: sink
      task_name: to_clickhouse
      emplace:
        to_save: NHL_EVENTS
        model: events
        table: events

  roster:
    - label: score_nhlapi
      task_type: source
      task_name: load_score_source
      emplace: {}
    - label: extract_games
      task_type: transform
      task_name: unnest_games_and_get_url
      emplace: {}
    - label: load_plays
      task_type: request
      task_name: fetch_play_by_play
      emplace: 
        input: NHL_GAMES
    - label: process_roster
      task_type: transform
      task_name: process_roster
      emplace: 
        input: RAW_PLAY_BY_PLAY
    - label: save_roster_to_clickhouse
      task_type: sink
      task_name: to_clickhouse
      emplace:
        to_save: NHL_ROSTER
        model: roster
        table: roster


  scores_sample:
    - label: score_nhlapi
      task_type: source
      task_name: load_score_source
      emplace: {}
    - label: extract_games
      task_type: transform
      task_name: unnest_games_and_get_url
      emplace: {}
    - label: process_goals
      task_type: transform
      task_name: process_goals
      emplace: {}
    - label: process_scores
      task_type: transform
      task_name: process_scores
      emplace: {}
    - label: save_game_state
      task_type: sink
      task_name: save_json_file
      emplace: 
        to_save: NHL_GAMES
        filepath: raw_nhl_scores.json
    - label: save_game_state
      task_type: sink
      task_name: save_csv_file
      emplace: 
        to_save: GOALS_CLEAN
        filepath: clean_nhl_goals.csv
    - label: save_game_state
      task_type: sink
      task_name: save_csv_file
      emplace: 
        to_save: SCORE_CLEAN
        filepath: scoreboard.csv

source:
  load_score_source:
    max_threads: 1
    sources:
      - http: 
          url: "https://api-web.nhle.com/v1/score/2024-10-30"
          output: SCORE_RAW

request:
  fetch_shiftcharts:
    max_threads: 8 
    input: $input
    requests:
      - http_single:
          method: GET
          content_type: application/json
          output: RAW_SHIFTCHARTS
          url_column:
            str: "https://api.nhle.com/stats/rest/en/shiftcharts"
          url_params:
            - df: $input
              col: id
              template: "cayenneExp=gameId in ({})"
              separator: ","

  fetch_play_by_play:
    max_threads: 8
    input: $input
    requests:
      - http_batch:
          method: GET
          content_type: application/json
          url_column: url
          output: RAW_PLAY_BY_PLAY

transform:
  unnest_games_and_get_url:
    input: SCORE_RAW
    output: NHL_GAMES
    steps:
      - unnest_list_of_struct: games
      - with_columns: 
          url: 
            format:
              template: "https://api-web.nhle.com/v1/gamecenter/{}/play-by-play"
              columns: [id]
      - drop: [ prevDate, nextDate, gameWeek, oddsPartners ]

  process_shifts:
    input: $input
    output: NHL_SHIFTS
    steps:
      - unnest_struct: data
      - drop: [total]
      - time:
          include: [duration, startTime, endTime]
          into: "%M:%S"
      - uniform_id_type:
          include: [gameId, id, detailCode, playerId, typeCode, eventNumber]
      - select:
          id: id
          detail_code: detailCode
          duration: ^duration$
          start_time: startTime
          end_time: endTime
          event_description: ^eventDescription$
          event_details: ^eventDetails$
          event_number: eventNumber #
          game_id: gameId
          period: period
          playerId: playerId
          shift_number: shiftNumber # this is int64
          type_code: typeCode

  process_roster:
    input: $input
    output: NHL_ROSTER
    steps:
      - select:
          game_id: id 
          rosterSpots: rosterSpots
      - unnest_list_of_struct: rosterSpots
      - select:
          team_id: teamId
          player_id: playerId
          first_name: firstName.default
          last_name: lastName.default
          position: positionCode
          headshot: headshot
          game_id: game_id
          jersey_number: sweaterNumber
      - uniform_id_type:
          include: [team_id, player_id, game_id]
      - uniform_id_type:
          include: [jersey_number]
          into: uint8

  process_plays:
    input: $input
    output: NHL_PLAYS
    steps:
      - select:
          id: id 
          plays: plays
      - unnest_list_of_struct: plays
      - time: 
          include: [timeInPeriod, timeRemaining]
          into: "%M:%S"
      - uniform_id_type: 
          include: [eventId, typeCode, situationCode, id]
          into: uint64
      - select:
          event_id: eventId
          period_type: periodDescriptor.periodType
          time_in_period: timeInPeriod
          time_remaining: timeRemaining
          situation_code: situationCode
          type_code: typeCode
          type_desc_key: typeDescKey
          sort_order: sortOrder
          ppt_replay_url: pptReplayUrl
          period: periodDescriptor.number
          game_id: id
          details: details

  process_events_from_plays:
    input: $input
    output: NHL_EVENTS
    steps:
      - select:
          game_id: game_id
          event_id: event_id
          sort_order: sort_order
          details: details
      - unnest_struct: details
      - select:
          game_id: game_id
          event_id: event_id
          sort_order: sort_order
          x_coord: ^xCoord$
          y_coord: ^yCoord$
          zone_code: ^zoneCode$
          reason: ^reason$
          secondary_reason: ^secondaryReason$
          shot_type: ^shotType$
          shooting_player_id: ^shootingPlayerId$
          goalie_in_net_id: ^goalieInNetId$
          event_owner_team_id: ^eventOwnerTeamId$
          losing_player_id: ^losingPlayerId$
          winning_player_id: ^winningPlayerId$
          hitting_player_id: ^hittingPlayerId$
          hittee_player_id: ^hitteePlayerId$
          desc_key: ^descKey$
          duration: ^duration$
          committed_by_player_id: ^committedByPlayerId$
          drawn_by_player_id: ^drawnByPlayerId$
          away_sog: ^awaySOG$
          home_sog: ^homeSOG$
          blocking_player_id: ^blockingPlayerId$
          scoring_player_id: ^scoringPlayerId$
          scoring_player_total: ^scoringPlayerTotal$
          assist1_player_id: ^assist1PlayerId$
          assist1_player_total: ^assist1PlayerTotal$
          assist2_player_id: ^assist2PlayerId$
          assist2_player_total: ^assist2PlayerTotal$
          away_score: ^awayScore$
          home_score: ^homeScore$
          highlight_clip: ^highlightClip$
          highlight_clip_fr: ^highlightClipFr$
          discrete_clip: ^discreteClip$
          discrete_clip_fr: ^discreteClipFr$
          penalty_type_code: ^typeCode$
          served_by_player_id: ^servedByPlayerId$
      - uniform_id_type:
          include: [shooting_player_id, goalie_in_net_id, event_owner_team_id, losing_player_id,
          winning_player_id, hitting_player_id, hittee_player_id, committed_by_player_id,
          drawn_by_player_id, blocking_player_id, scoring_player_id, assist1_player_id, assist2_player_id,
          served_by_player_id, highlight_clip, highlight_clip_fr, discrete_clip, discrete_clip_fr,
          home_score, away_score, home_sog, away_sog, assist1_player_total, assist2_player_total, scoring_player_total
      ]

  process_scores:
    input: NHL_GAMES
    output: SCORE_CLEAN
    steps:
      - select:
          date: currentDate
          away_sog: awayTeam.sog
          away_score: awayTeam.score
          away_team: awayTeam.abbrev
          away_id: awayTeam.id
          home_sog: homeTeam.sog
          home_score: homeTeam.score
          home_team: homeTeam.abbrev
          home_id: homeTeam.id
          game_id: id

  process_goals:
    input: NHL_GAMES
    output: GOALS_CLEAN
    steps:
      - select:
          goals: goals
          date: currentDate
          away_team: awayTeam.abbrev
          away_id: awayTeam.id
          home_team: homeTeam.abbrev
          home_id: homeTeam.id
          game_id: id
      - unnest_list_of_struct: goals
      - select:
          game_id: game_id
          period: period
          time_in_period: timeInPeriod
          player_id: playerId
          player_name: name.default
          team_abbrev: teamAbbrev
          away_score: awayScore
          away_team: away_team
          home_score: homeScore
          home_team: home_team
          goal_type: goalModifier
          date: date
          
model:
  roster:
    team_id: uint64
    player_id: uint64
    first_name: str
    last_name: str
    headshot: str
    game_id: uint64
    jersey_number: uint8
    position: str

  plays:
    event_id: uint64
    period_type: str
    time_in_period: time
    time_remaining: time
    situation_code: uint64
    type_code: uint64
    type_desc_key: str
    sort_order: int64
    ppt_replay_url: str
    period: uint8
    game_id: uint64

  events:
    game_id: uint64
    event_id: uint64
    sort_order: int64
    x_coord: int64
    y_coord: int64
    zone_code: str
    reason: str
    secondary_reason: str
    shot_type: str
    shooting_player_id: uint64
    goalie_in_net_id: uint64
    event_owner_team_id: uint64
    losing_player_id: uint64
    winning_player_id: uint64
    hitting_player_id: uint64
    hittee_player_id: uint64
    desc_key: str
    duration: int64
    committed_by_player_id: uint64
    drawn_by_player_id: uint64
    away_sog: uint64
    home_sog: uint64
    blocking_player_id: uint64
    scoring_player_id: uint64
    scoring_player_total: uint64
    assist1_player_id: uint64
    assist1_player_total: uint64
    assist2_player_id: uint64
    assist2_player_total: uint64
    away_score: uint64
    home_score: uint64
    highlight_clip: uint64
    highlight_clip_fr: uint64
    discrete_clip: uint64
    discrete_clip_fr: uint64
    penalty_type_code: uint64
    served_by_player_id: uint64

  shifts:
    id: uint64
    detail_code: uint64
    duration: time
    start_time: time
    end_time: time
    event_description: str
    event_details: str
    event_number: uint64
    game_id: uint64
    period: uint8
    playerId: uint64
    shift_number: uint64
    type_code: uint64

sink:
  save_json_file: 
    input: $to_save
    max_threads: 1
    sinks:
      - json: 
          filepath: $filepath
          merge_type: replace

  save_csv_file: 
    input: $to_save
    max_threads: 1
    sinks:
      - csv: 
          filepath: $filepath
          merge_type: replace

  to_clickhouse:
    input: $to_save
    max_threads: 8
    sinks:
      - clickhouse:
          url: http://default:password@localhost:8123/
          table: $table
          merge_type: replace
          model: $model
