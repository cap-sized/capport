pipeline:
  game_info:
    - label: score_nhlapi
      task_type: source
      task_name: load_http_url_json
      emplace:
        url: "https://api-web.nhle.com/v1/score/now"
        output: RAW_SCORE
        # url: "https://api-web.nhle.com/v1/score/2025-06-14"
    - label: extract_games_from_scores
      task_type: transform
      task_name: unnest_games_and_get_url
      emplace:
        input: RAW_SCORE
        output: NHL_GAMES
        play_by_play_url:
          format:
            template: "https://api-web.nhle.com/v1/gamecenter/{}/play-by-play"
            columns: [id]
            ignore_nulls: true
    - label: request_play_by_play
      task_type: request
      task_name: request_play_by_play
      emplace:
        input: NHL_GAMES
        output: NHL_PLAYS_EVENTS_ROSTER
    - label: process_games # games are only populated once here
      task_type: transform
      task_name: process_games
      emplace: 
        input: NHL_PLAYS_EVENTS_ROSTER
        output: CLEAN_GAMES
    - label: save_games
      task_type: sink
      task_name: save_clickhouse_csv
      emplace: 
        input: CLEAN_GAMES
        filepath: games.csv
        model: games

  game_day:
    - label: score_nhlapi
      task_type: source
      task_name: load_http_url_json
      emplace:
        url: "https://api-web.nhle.com/v1/score/now"
        output: RAW_SCORE
    - label: extract_games_from_scores
      task_type: transform
      task_name: unnest_games_and_get_url
      emplace:
        input: RAW_SCORE
        output: NHL_GAMES
        play_by_play_url:
          format:
            template: "https://api-web.nhle.com/v1/gamecenter/{}/play-by-play"
            columns: [id]
            ignore_nulls: true
    - label: request_shiftcharts
      task_type: request
      task_name: request_shiftcharts
      emplace:
        input: NHL_GAMES
        output: NHL_SHIFTS
        shiftcharts_url:
          str: "https://api.nhle.com/stats/rest/en/shiftcharts"
    - label: request_play_by_play
      task_type: request
      task_name: request_play_by_play
      emplace:
        input: NHL_GAMES
        output: NHL_PLAYS_EVENTS_ROSTER
    - label: process_games
      task_type: transform
      task_name: process_games
      emplace: 
        input: NHL_PLAYS_EVENTS_ROSTER
        output: CLEAN_GAMES
    - label: process_game_clocks
      task_type: transform
      task_name: process_game_clocks
      emplace: 
        input: NHL_PLAYS_EVENTS_ROSTER
        output: CLEAN_GAME_CLOCKS
    - label: process_shifts
      task_type: transform
      task_name: process_shifts
      emplace:
        input: NHL_SHIFTS
        output: CLEAN_SHIFTS
    - label: process_roster
      task_type: transform
      task_name: process_roster
      emplace: 
        input: NHL_PLAYS_EVENTS_ROSTER
        output: CLEAN_ROSTER
    - label: process_plays_events
      task_type: transform
      task_name: process_plays
      emplace: 
        input: NHL_PLAYS_EVENTS_ROSTER
        output: CLEAN_PLAYS
    - label: process_events_from_plays
      task_type: transform
      task_name: process_events_from_plays
      emplace: 
        input: CLEAN_PLAYS
        output: CLEAN_EVENTS
    - label: save_game_clocks
      task_type: sink
      task_name: save_clickhouse_csv
      emplace: 
        input: CLEAN_GAME_CLOCKS
        filepath: game_clocks.csv
        model: game_clocks
    - label: save_rosters
      task_type: sink
      task_name: save_clickhouse_csv
      emplace: 
        input: CLEAN_ROSTER
        filepath: rosters.csv
        model: game_clocks
    - label: save_shifts
      task_type: sink
      task_name: save_clickhouse_csv
      emplace: 
        input: CLEAN_SHIFTS
        filepath: shifts.csv
        model: shifts
    - label: save_plays
      task_type: sink
      task_name: save_clickhouse_csv
      emplace: 
        input: CLEAN_PLAYS
        filepath: plays.csv
        model: plays
    - label: save_events
      task_type: sink
      task_name: save_clickhouse_csv
      emplace: 
        input: CLEAN_EVENTS
        filepath: play_events.csv
        model: play_events

source:
  load_http_url_json:
    max_threads: 1
    sources:
      - http: 
          url: $url
          output: $output

request:
  request_shiftcharts:
    max_threads: 8 
    input: $input
    requests:
      - http_single:
          method: GET
          content_type: application/json
          output: $output
          url_column: $shiftcharts_url
          url_params:
            - df: $input
              col: id
              template: "cayenneExp=gameId in ({})"
              separator: ","

  request_play_by_play:
    max_threads: 8
    input: $input
    requests:
      - http_batch:
          method: GET
          content_type: application/json
          url_column: play_by_play_url
          output: $output

transform:
  unnest_games_and_get_url:
    input: $input
    output: $output
    steps:
      - unnest_list_of_struct: games
      - with_columns: 
          play_by_play_url: $play_by_play_url
      - drop: [ prevDate, nextDate, gameWeek, oddsPartners ]

  process_games:
    input: $input
    output: $output
    steps:
      - select:
          id: id
          season: season
          game_type: gameType
          venue: venue.default
          venue_location: ^venueLocation$.default
          away_team_id: awayTeam.id
          home_team_id: homeTeam.id
          start_time_utc: startTimeUTC
          eastern_utc_offset: easternUTCOffset
          venue_utc_offset: venueUTCOffset
          game_schedule_state: gameScheduleState
      - time:
          include: [start_time_utc]
          into: "%Y-%m-%dT%H:%M:%SZ"
      - uniform_id_type: 
          include: [season, away_team_id, home_team_id, id]
          into: uint64
      - uniform_id_type: 
          include: [game_type]
          into: uint8

  process_game_clocks:
    input: $input
    output: $output
    steps:
      - unnest_struct: ^periodDescriptor$
      - select:
          game_id: id
          time_remaining: clock.timeRemaining
          seconds_remaining: clock.secondsRemaining
          running: clock.running
          in_intermission: clock.inIntermission
          period: ^number$
          period_type: ^periodType$
          shootout_in_use: shootoutInUse
          ot_in_use: otInUse
          game_state: gameState
          display_period: displayPeriod
          reg_periods: regPeriods
      - time:
          include: [time_remaining]
          into: "%M:%S"
      - uniform_id_type: 
          include: [seconds_remaining, game_id]
          into: uint64
      - uniform_id_type: 
          include: [period, display_period, reg_periods]
          into: uint8

  process_shifts:
    input: $input
    output: $output
    steps:
      - unnest_struct: data
      - drop: [total]
      - time:
          include: [duration, startTime, endTime]
          into: "%M:%S"
      - uniform_id_type:
          include: [gameId, id, detailCode, playerId, typeCode, eventNumber]
      - select:
          id: id
          detail_code: detailCode
          duration: ^duration$
          start_time: startTime
          end_time: endTime
          event_description: ^eventDescription$
          event_details: ^eventDetails$
          event_number: eventNumber #
          game_id: gameId
          period: period
          playerId: playerId
          shift_number: shiftNumber # this is int64
          type_code: typeCode
  process_roster:
    input: $input
    output: $output
    steps:
      - select:
          game_id: id 
          rosterSpots: rosterSpots
      - unnest_list_of_struct: rosterSpots
      - select:
          team_id: teamId
          player_id: playerId
          first_name: firstName.default
          last_name: lastName.default
          position: positionCode
          headshot: headshot
          game_id: game_id
          jersey_number: sweaterNumber
      - uniform_id_type:
          include: [team_id, player_id, game_id]
      - uniform_id_type:
          include: [jersey_number]
          into: uint8

  process_plays:
    input: $input
    output: $output
    steps:
      - select:
          id: id 
          plays: plays
      - unnest_list_of_struct: plays
      - time: 
          include: [timeInPeriod, timeRemaining]
          into: "%M:%S"
      - uniform_id_type: 
          include: [eventId, typeCode, situationCode, id]
          into: uint64
      - select:
          event_id: eventId
          period_type: periodDescriptor.periodType
          time_in_period: timeInPeriod
          time_remaining: timeRemaining
          situation_code: situationCode
          type_code: typeCode
          type_desc_key: typeDescKey
          sort_order: sortOrder
          ppt_replay_url: pptReplayUrl
          period: periodDescriptor.number
          game_id: id
          details: details

  process_events_from_plays:
    input: $input
    output: $output
    steps:
      - select:
          game_id: game_id
          event_id: event_id
          sort_order: sort_order
          details: details
      - unnest_struct: details
      - select:
          game_id: game_id
          event_id: event_id
          sort_order: sort_order
          x_coord: ^xCoord$
          y_coord: ^yCoord$
          zone_code: ^zoneCode$
          reason: ^reason$
          secondary_reason: ^secondaryReason$
          shot_type: ^shotType$
          shooting_player_id: ^shootingPlayerId$
          goalie_in_net_id: ^goalieInNetId$
          event_owner_team_id: ^eventOwnerTeamId$
          losing_player_id: ^losingPlayerId$
          winning_player_id: ^winningPlayerId$
          hitting_player_id: ^hittingPlayerId$
          hittee_player_id: ^hitteePlayerId$
          desc_key: ^descKey$
          duration: ^duration$
          committed_by_player_id: ^committedByPlayerId$
          drawn_by_player_id: ^drawnByPlayerId$
          away_sog: ^awaySOG$
          home_sog: ^homeSOG$
          blocking_player_id: ^blockingPlayerId$
          scoring_player_id: ^scoringPlayerId$
          scoring_player_total: ^scoringPlayerTotal$
          assist1_player_id: ^assist1PlayerId$
          assist1_player_total: ^assist1PlayerTotal$
          assist2_player_id: ^assist2PlayerId$
          assist2_player_total: ^assist2PlayerTotal$
          away_score: ^awayScore$
          home_score: ^homeScore$
          highlight_clip: ^highlightClip$
          highlight_clip_fr: ^highlightClipFr$
          discrete_clip: ^discreteClip$
          discrete_clip_fr: ^discreteClipFr$
          penalty_type_code: ^typeCode$
          served_by_player_id: ^servedByPlayerId$
      - uniform_id_type:
          include: [shooting_player_id, goalie_in_net_id, event_owner_team_id, losing_player_id,
          winning_player_id, hitting_player_id, hittee_player_id, committed_by_player_id,
          drawn_by_player_id, blocking_player_id, scoring_player_id, assist1_player_id, assist2_player_id,
          served_by_player_id, highlight_clip, highlight_clip_fr, discrete_clip, discrete_clip_fr,
          home_score, away_score, home_sog, away_sog, assist1_player_total, assist2_player_total, scoring_player_total
      ]

sink:
  save_csv_file: 
    input: $input
    max_threads: 1
    sinks:
      - csv: 
          filepath: $filepath
          merge_type: replace

  save_clickhouse_csv: 
    input: $input
    max_threads: 8
    sinks:
      - csv: 
          filepath: $filepath
          merge_type: replace
          model: $model
      - clickhouse: 
          url: http://default:password@localhost:8123/
          filepath: $filepath
          merge_type: replace
          model: $model
          table: $model
        options:
          
